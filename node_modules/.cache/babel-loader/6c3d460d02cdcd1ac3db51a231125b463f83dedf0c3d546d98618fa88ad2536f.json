{"ast":null,"code":"useEffect(() => {\n  const apiKey = 'b39fae28754f0a221a142410e8071a31';\n  const fetchMovies = async category => {\n    try {\n      const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\n        params: {\n          api_key: apiKey,\n          query: category\n        }\n      });\n      console.log(`Movies for ${category}:`, response.data.results);\n      return response.data.results;\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n      return [];\n    }\n  };\n  const fetchAllMovies = async () => {\n    const moviesData = await Promise.all(selectedCategories.map(category => fetchMovies(category)));\n    const moviesByCategory = selectedCategories.reduce((acc, category, index) => {\n      acc[category] = moviesData[index];\n      return acc;\n    }, {});\n    setMoviesByCategory(moviesByCategory);\n  };\n  fetchAllMovies();\n}, [selectedCategories]);","map":{"version":3,"names":["useEffect","apiKey","fetchMovies","category","response","axios","get","params","api_key","query","console","log","data","results","error","fetchAllMovies","moviesData","Promise","all","selectedCategories","map","moviesByCategory","reduce","acc","index","setMoviesByCategory"],"sources":["C:/Users/HP/Desktop/CuvettReact/CapstoneProject/main/src/pages/Browser.js"],"sourcesContent":["useEffect(() => {\r\n  const apiKey = 'b39fae28754f0a221a142410e8071a31';\r\n\r\n  const fetchMovies = async (category) => {\r\n    try {\r\n      const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\r\n        params: {\r\n          api_key: apiKey,\r\n          query: category,\r\n        },\r\n      });\r\n\r\n      console.log(`Movies for ${category}:`, response.data.results);\r\n      return response.data.results;\r\n    } catch (error) {\r\n      console.error('Error fetching movies:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const fetchAllMovies = async () => {\r\n    const moviesData = await Promise.all(selectedCategories.map(category => fetchMovies(category)));\r\n    const moviesByCategory = selectedCategories.reduce((acc, category, index) => {\r\n      acc[category] = moviesData[index];\r\n      return acc;\r\n    }, {});\r\n    setMoviesByCategory(moviesByCategory);\r\n  };\r\n\r\n  fetchAllMovies();\r\n}, [selectedCategories]);"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACd,MAAMC,MAAM,GAAG,kCAAkC;EAEjD,MAAMC,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,2CAA2C,EAAE;QAC5EC,MAAM,EAAE;UACNC,OAAO,EAAEP,MAAM;UACfQ,KAAK,EAAEN;QACT;MACF,CAAC,CAAC;MAEFO,OAAO,CAACC,GAAG,CAAE,cAAaR,QAAS,GAAE,EAAEC,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC;MAC7D,OAAOT,QAAQ,CAACQ,IAAI,CAACC,OAAO;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,EAAE;IACX;EACF,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,UAAU,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAACC,GAAG,CAACjB,QAAQ,IAAID,WAAW,CAACC,QAAQ,CAAC,CAAC,CAAC;IAC/F,MAAMkB,gBAAgB,GAAGF,kBAAkB,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEpB,QAAQ,EAAEqB,KAAK,KAAK;MAC3ED,GAAG,CAACpB,QAAQ,CAAC,GAAGa,UAAU,CAACQ,KAAK,CAAC;MACjC,OAAOD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACNE,mBAAmB,CAACJ,gBAAgB,CAAC;EACvC,CAAC;EAEDN,cAAc,CAAC,CAAC;AAClB,CAAC,EAAE,CAACI,kBAAkB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}